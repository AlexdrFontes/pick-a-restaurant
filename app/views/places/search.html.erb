<%= render 'shared/menu' %>
<div class="main-container-search-back">
<div class="banner-container-search-main no-pad">
  <%=  link_to (image_tag "http://res.cloudinary.com/dywzzd0as/image/upload/v1520856923/Group_2_1.svg", {class: "logo"}), root_path %>
  <div class="details">
    <%= form_for("search", :url => { :action => "show" }, :html => { :method => "GET"}) do |f| %>
    <input type="hidden" name="meal_type" value=<%= @meal_type %> >
    <div class="form-group cuisine">
      <%= f.select( :cuisine_types, @unique_types, {}, {multiple: true, id: "selectize", placeholder: "CUISINE"}) %>
    </div>
    <div class="form-group">
      <input class="form-control mr-sm-2" id="place_address"  type="text" name="place" action="/places/show" method="get" placeholder="Try &quot;Cais do SodrÃ©&quot;">
    </div>
    <div class="form-group">
      <div class="slider-margin">
        <%= render 'range-slider' %>
      </div>
    </div>
    <div class="form-group">
      <%= render 'double-slider' %>
    </div>
    <div class="button-pick">
      <button class="btn btn-lg btn-start" type="submit" method="get">
        <%= image_tag "http://res.cloudinary.com/dywzzd0as/image/upload/v1520857031/ic_done_white_24px.svg", {class: "button_pick", style: "width: 50px;"} %>
      </button>
    <% end %>
  </div>
</div>
<script type="text/javascript" charset="utf-8">
  $(document).ready(function() {
    var currgeocoder;
    //Set geo location lat and long
    navigator.geolocation.getCurrentPosition(function(position, html5Error) {
    geo_loc = processGeolocationResult(position);
    currLatLong = geo_loc.split(",");
    initializeCurrent(currLatLong[0], currLatLong[1]);
    });
    //Get geo location result
    function processGeolocationResult(position) {
             html5Lat = position.coords.latitude; //Get latitude
             html5Lon = position.coords.longitude; //Get longitude
             html5TimeStamp = position.timestamp; //Get timestamp
             html5Accuracy = position.coords.accuracy; //Get accuracy in meters
             return (html5Lat).toFixed(8) + ", " + (html5Lon).toFixed(8);
    }
    //Check value is present or not & call google api function
    function initializeCurrent(latcurr, longcurr) {
             currgeocoder = new google.maps.Geocoder();
             console.log(latcurr + "-- ######## --" + longcurr);
             if (latcurr != '' && longcurr != '') {
                 var myLatlng = new google.maps.LatLng(latcurr, longcurr);
                 return getCurrentAddress(myLatlng);
             }
    }
    //Get current address
    function getCurrentAddress(location) {
             currgeocoder.geocode({
                  'location': location
             }, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    console.log("address:", results[0]);
                    $("#place_address").val(results[0].formatted_address);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
         }
    });
</script>






